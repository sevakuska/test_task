version: '3.8'

services:

  postgresql:
    image: postgres:16.2-bookworm
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - ${DATABASE_OUTER_PORT}:${DATABASE_PORT}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    container_name: migrations
    command: ["alembic", "upgrade", "head"]
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - DATABASE_DRIVER=${DATABASE_DRIVER}
      - DATABASE_API=${DATABASE_API}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}

  pgadmin4:
    image: dpage/pgadmin4:8.6
    ports:
      - ${PGADMIN_OUTER_PORT}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      postgresql:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  app:
    build: .
    container_name: app
    command: ["uvicorn", "infra.controllers.rest_api.main:app", "--host", "0.0.0.0", "--port", "80"]
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - ${APP_OUTER_PORT}:80
    environment:
      - DATABASE_DRIVER=${DATABASE_DRIVER}
      - DATABASE_API=${DATABASE_API}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}

volumes:
  postgresql-data:
    driver: local